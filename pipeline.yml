jobs:
- name: build
  plan:
  - aggregate:
    - get: concourse
      trigger: true
      params:
        globs: [none]
    - get: concourse-source
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: golang
          tag: latest
      inputs:
      - name: concourse
      - name: concourse-source
      outputs:
      - name: artifacts
      - name: ver
      run:
        path: bash
        args:
        - -exc
        - |
          target=$PWD/artifacts
          tag=$(cat concourse/tag)
          cd concourse-source
          export GOPATH=$PWD
          cd src/github.com/concourse/fly

          GOARCH=arm64 go build
          cp fly $target/fly-arm64

          for GOARM in 5 6 7; do
            GOARCH=arm go build
            cp fly $target/fly-arm${GOARM}
          done

          for file in $(grep '/etc/resolv.conf' /usr/local/go/src/net/* -l 2> /dev/null); do
            sed -i $file -es'^/etc/resolv.conf^/data/data/com.termux/files/usr/etc/resolv.conf^'
          done
          
          GOARCH=arm64 go build
          cp fly $target/fly-arm64-termux

          for GOARM in 5 6 7; do
            GOARCH=arm go build
            cp fly $target/fly-arm${GOARM}-termux
          done

  - put: fly-release
    params:
      name: concourse/tag
      tag: concourse/tag
      globs:
      - artifacts/*

resources:
- name: concourse
  type: github-release
  source:
    owner: concourse
    repository: concourse
    access_token: ((github_access_token))
- name: concourse-source
  type: git
  source:
    uri: https://github.com/concourse/concourse.git
- name: fly-release
  type: github-release
  source:
    owner: timotto
    repository: concourse-fly-arm
    access_token: ((github_access_token))
